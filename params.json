{"name":"Diacritical","tagline":"Transliteration-Dictionary Based Suggestion Library - Javascript","body":"# Diacritical\r\n_A Transliteration-Dictionary Based Suggestion Library_\r\n\r\n### Example: http://chadananda.github.io/diacritical\r\n### Test harness: http://chadananda.github.io/diacritical/tests\r\n\r\n\r\n### The big idea:\r\n\r\nFormatting Bahá’í electronic texts is a pain. Even the best quality electronic texts from the BWC contain thousands of errors. And by far the most common type of error is the darned diacritcals on all those transliterated Arabic and Persian terms.\r\n\r\nThis project attempts to address that fundamental problem by providing an automated replacement and suggestion system which can utilize a dictionary of authoritatively spelled terms.  \r\n\r\nThe project to actually gather that massive correct dictionary is over here:\r\n\r\n#### https://github.com/chadananda/accents\r\n\r\n\r\n### Get involved, help build the dictionary!\r\n\r\nTo get involved, simply contact me at <chadananda@gmail.com>. I'll set up user credentials for you which allow you to log in and start adding words to the dictionary. \r\n\r\nA JSON object containing the current wordlist can be pulled down using this REST URL:\r\n\r\n  * http://diacritics.iriscouch.com/accents/_design/terms_list/_view/terms_list?group=true&group_level=1\r\n  \r\n  \r\n\r\n### Using the Library\r\n\r\nAfter adding diacritical.js to a web page simply provide a dictionary of UTF-8 terms as a Javascript array. For example:\r\n\r\n```Javascript\r\nvar diacrital = New Diacritical();\r\nvar dictionary = [\r\n    'Abu’l-Faḍl',\r\n    'Aḥmad',\r\n    'Aḥmad',\r\n    'Aḥmad',\r\n    'Ahmad',\r\n    'aḥmad',\r\n    'Aḥsanu’l-Qiṣaṣ',\r\n    'Ba_ghdád',\r\n    'Baqí‘',\r\n    'Báqir-i-Ra_shtí',\r\n    'Dalílu’l-Mutaḥayyirín',\r\n    'Fatḥ-‘Alí',\r\n];\r\nvar bad_text = \"This is some sample text with bad diacriticals: Ahmad, Baghdad, \"+\r\n  \"Fath-Ali and Baqi. Notice that the dictionary uses _sh to indicate an \"+\r\n  \"underscore. Also, notice that the dictionary is case sensitive but the \"+\r\n  \"replacement system is still smart enough to deal with all-caps like AHMAD. \"+\r\n  \"Moreover, the dictionary ideally should have multiple versions of each word in \"+\r\n  \"order to help weed out misspellings. (Notice one of the spellings of Ahmad is \"+\r\n  \"wrong in the dictionary but the word is still corrected correctly.)\";\r\n  \r\nvar fixed_text = diacritical.replaceText(bad_text, dictionary);\r\n```\r\n#### See it in action here: http://chadananda.github.io/diacritical\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}